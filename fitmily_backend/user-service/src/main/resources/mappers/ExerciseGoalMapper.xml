<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.d208.fitmily.domain.exercise.mapper.ExerciseGoalMapper">

    <!-- 운동 목표 목록 조회 -->
    <select id="selectGoalsByUserId" parameterType="Integer" resultType="java.util.HashMap">
        SELECT
        eg.exercise_goal_name,
        CAST(eg.exercise_goal_value AS CHAR) as exercise_goal_value,
        CAST(
        CASE
        WHEN eg.exercise_goal_name = '산책' THEN
        <!-- 산책인 경우: 산책 테이블에서 당일 거리 정보 가져옴 -->
        COALESCE(
        (SELECT
        SUM(w.walk_distance)
        FROM walk w
        WHERE w.user_id = #{userId}
        AND DATE(w.walk_created_at) = CURDATE()),
        0
        )
        ELSE
        <!-- 다른 운동인 경우: 운동 테이블에서 당일 횟수 정보 가져옴 -->
        COALESCE(
        (SELECT
        SUM(e.exercise_count)
        FROM exercise e
        WHERE e.user_id = #{userId}
        AND e.exercise_name = eg.exercise_goal_name
        AND DATE(e.exercise_created_at) = CURDATE()),
        0
        )
        END
        AS CHAR
        ) as exercise_record_value
        FROM
        exercise_goal eg
        WHERE
        eg.user_id = #{userId}
    </select>

    <!-- 전체 운동 목표 진행률 계산 -->
    <select id="calculateProgress" parameterType="Integer" resultType="Integer">
        SELECT
        COALESCE(
        ROUND(
        AVG(
        CASE
        WHEN eg.exercise_goal_name = '산책' THEN
        <!-- 산책인 경우: 산책 테이블에서 당일 거리 정보 가져옴 -->
        CASE
        WHEN w_distance.total_distance IS NULL THEN 0
        WHEN w_distance.total_distance >= CAST(eg.exercise_goal_value AS DECIMAL(10,1)) THEN 100
        ELSE (w_distance.total_distance / CAST(eg.exercise_goal_value AS DECIMAL(10,1))) * 100
        END
        ELSE
        <!-- 다른 운동인 경우: 운동 테이블에서 당일 횟수 정보 가져옴 -->
        CASE
        WHEN e_counts.count_sum IS NULL THEN 0
        WHEN e_counts.count_sum >= CAST(eg.exercise_goal_value AS DECIMAL(10,1)) THEN 100
        ELSE (e_counts.count_sum / CAST(eg.exercise_goal_value AS DECIMAL(10,1))) * 100
        END
        END
        )
        ), 0
        ) as progress
        FROM
        exercise_goal eg
        LEFT JOIN (
        SELECT
        e.exercise_name,
        SUM(e.exercise_count) as count_sum
        FROM
        exercise e
        WHERE
        e.user_id = #{userId}
        AND DATE(e.exercise_created_at) = CURDATE()
        GROUP BY
        e.exercise_name
        ) e_counts ON eg.exercise_goal_name = e_counts.exercise_name
        LEFT JOIN (
        SELECT
        SUM(w.walk_distance) as total_distance
        FROM
        walk w
        WHERE
        w.user_id = #{userId}
        AND DATE(w.walk_created_at) = CURDATE()
        ) w_distance ON eg.exercise_goal_name = '산책'
        WHERE
        eg.user_id = #{userId}
    </select>

    <!-- 중복 운동 목표 확인 -->
    <select id="countGoalByNameAndUserId" resultType="Integer">
        SELECT COUNT(*)
        FROM exercise_goal
        WHERE user_id = #{userId}
        AND exercise_goal_name = #{exerciseName}
    </select>

    <!-- 운동 목표 등록 -->
    <insert id="insertGoal">
        INSERT INTO exercise_goal (
        user_id,
        exercise_goal_name,
        exercise_goal_value,
        exercise_goal_progress,
        exercise_goal_created_at,
        exercise_goal_updated_at
        ) VALUES (
        #{userId},
        #{goal.exercise_goal_name},
        #{goal.exercise_goal_value},
        0,
        #{now},
        #{now}
        )
    </insert>

    <!-- 운동 목표 수정 -->
    <update id="updateGoal">
        UPDATE exercise_goal
        SET
        exercise_goal_value = #{exerciseValue},
        exercise_goal_updated_at = #{now}
        WHERE
        exercise_goal_id = #{goalId}
        AND user_id = #{userId}
    </update>

    <!-- 운동 목표 삭제 -->
    <delete id="deleteGoal">
        DELETE FROM exercise_goal
        WHERE
        exercise_goal_id = #{goalId}
        AND user_id = #{userId}
    </delete>

    <!-- 운동 목표 진행률 업데이트 -->
    <update id="updateGoalProgress">
        UPDATE exercise_goal
        SET
        exercise_goal_progress = #{progress},
        exercise_goal_updated_at = NOW()
        WHERE
        user_id = #{userId}
        AND exercise_goal_name = #{exerciseName}
    </update>

</mapper>